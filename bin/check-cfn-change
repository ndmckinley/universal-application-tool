#!/bin/bash

if [ -z "$GITHUB_EVENT_PATH" ];
	PR_NUMBER=localrun-$USER
else
	PR_NUMBER=$(jq -r .pull_request.number "$GITHUB_EVENT_PATH")
fi

set -e
aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/t1q6b4h2
docker build -f prod.Dockerfile -t universal-application-tool .
docker tag universal-application-tool:latest public.ecr.aws/t1q6b4h2/universal-application-tool:$PR_NUMBER
docker push public.ecr.aws/t1q6b4h2/universal-application-tool:$PR_NUMBER

TIMESTAMP=$(date +%s)

echo "checking if a changeset exists already..."
if aws cloudformation describe-change-set --change-set-name auto-changeset-pr-$PR_NUMBER  --stack-name uat > /dev/null; then
	aws cloudformation delete-change-set --change-set-name auto-changeset-pr-$PR_NUMBER  --stack-name uat
fi

aws s3 sync ./infra s3://seattle-uat-cftmpl/${TIMESTAMP}

aws cloudformation create-change-set --include-nested-stacks --stack-name uat --change-set-name auto-changeset-pr-$PR_NUMBER --template-url  https://seattle-uat-cftmpl.s3-us-west-2.amazonaws.com/$TIMESTAMP/stack.yaml --parameters "[{\"ParameterKey\": \"Timestamp\", \"ParameterValue\": \"$TIMESTAMP\"}]"

sleep 10

echo "The following resources might be replaced.  Please confirm these changes are correct before submitting this PR." > /tmp/message

for csn in $(aws cloudformation describe-change-set --change-set-name auto-changeset-pr-updateme  --stack-name uat | jq -r '.Changes[].ResourceChange.ChangeSetId') ; do
	aws cloudformation describe-change-set --change-set-name $csn | jq '.Changes[] | if .ResourceChange.Replacement == "True" then .ResourceChange.LogicalResourceId else null end' >> /tmp/message
done

echo "::set-output name=changes_msg::$(cat /tmp/message)"
